1.	在SecurityConfig类里面，extends WebSecurityConfigurerAdapter
	重写configure（），
	 @Override
    protected void configure(HttpSecurity http) throws Exception {
        http
            .authorizeRequests() // 配置页面授权
            .antMatchers("/login").permitAll() // 登录页面允许所有用户访问（包括匿名）
            .antMatchers("/**").authenticated() // 其他页面仅限于登录用户访问
            
            .and()
            
            .formLogin() // 配置表单登录
            .loginPage("/login") // 指定登录页面的路径：显示表单（自己写） GET /login；提交表单（springsecurity自带） POST /login
            .defaultSuccessUrl("/"); // 指定默认的登录成功页面（比如直接访问登录页面，而不是其他需要登录的页面触发的）
    }
2.	编写loginController，用来处理登录
	@Controller
	public class LoginController {
	
	    @RequestMapping(method = RequestMethod.GET, value = "/login")
	    public String login(@RequestParam(required = false) String error,
	                        Model model) {
	        if (error != null) {
	            model.addAttribute("loginError", true);
	        }
	        
	        return "login";
	    }
	}
	
3.login.jsp
	<%@ taglib prefix="sec" uri="http://www.springframework.org/security/tags" %>

  	<!-- 防范CSRF攻击 -->
    <sec:csrfInput />	
	
	